#!/bin/sh
#
# master interactive script for processing a hiseq run through bcl2fastq and WGS analysis
#
export SEQ_PRISMS_BIN=/dataset/gseq_processing/active/bin/wgs_prism/seq_prisms 
export WGS_PRISM_BIN=/dataset/gseq_processing/active/bin/wgs_prism
BCL2FASTQ_NODE=invbfopp10.agresearch.co.nz   # iramohio-01

function read_answer_with_default() {
   if [ $INTERACTIVE == yes ]; then
      read answer
      if [ -z "$answer" ]; then
         answer=$@
      fi
   else
      answer=$@
   fi
}

function more_with_default() {
   if [ $INTERACTIVE == yes ]; then
      more $1
   else
      cat $1
   fi
}


function get_opts() {
   INTERACTIVE=no
   ARGRUN=""
   help_text="
This script is called by run_wgs_qc (or non-interactively by a cron job)
usage :\n
"
   while getopts ":hir:" opt; do
   case $opt in
       h)
         echo -e $help_text
         exit 0
         ;;
       i)
         INTERACTIVE=yes
         ;;
       r)
         ARGRUN=$OPTARG
         ;;
       \?)
         echo "Invalid option: -$OPTARG" >&2
         exit 1
         ;;
       :)
         echo "Option -$OPTARG requires an argument." >&2
         exit 1
         ;;
     esac
   done

   shift $((OPTIND-1))

   wgs_version=$1
}



function get_run_opts() {

   DRY_RUN=no
   DEBUG=no
   HPC_TYPE=slurm
   FILES=""
   OUT_ROOT=""

   HISEQ_ROOT=/dataset/hiseq/active
   MISEQ_ROOT=/dataset/miseq/active

   HISEQ_PROCESSING_ROOT=/dataset/gseq_processing/scratch/illumina/hiseq 
   # there is no MISEQ version of that as processing miseq using this script not supported currently 
  

   echo "*** wgs analysis version $wgs_version (KGD version $kgd_version) (using SNP engine = $SNP_ENGINE) ***
* note that you can paste into your terminal window by clicking your right mouse button
* at any stage you can press CTRL-C to exit the dialogs
* if you would prefer to run a single batch command, use ag_wgs_qc_prism.sh (-h for help) - e.g. 
  this allows you to run the analysis on any collection of input files
"

   ####### get and check RUN
   while [ 1 ] ; do
      echo "
please give the full name of wgs run you would like to process (e.g. 180403_M02412_0073_000000000-D3JC9 (miseq) 
or 180124_D00390_0342_ACBG7VANXX (hiseq - archived) or 191227_D00390_0523_BH3NGTBCX3 (hiseq not (yet) archived) )

"
      read_answer_with_default $ARGRUN
      RUN=$answer
      if [ ! -z "$RUN" ]; then 
         if [ -d $HISEQ_ROOT/$RUN ]; then 
            wgs_ROOT=$HISEQ_ROOT
            PROCESSING_ROOT=$HISEQ_PROCESSING_ROOT
            break
         elif [ -d $MISEQ_ROOT/$RUN ]; then
            echo "
to process miseq data, you will need to run the underlying script ag_wgs_qc_prism.sh
"
            exit 1
         else 
            echo "sorry can't find $RUN under either $HISEQ_ROOT or $MISEQ_ROOT "
         fi
      fi

   done

   ######## get and check output folder ###########
   # set up output folder
   while [ 1 ]; do
      echo "

      please specify WGS q/c output base folder (or just press ENTER to use default , $PROCESSING_ROOT/$RUN)"
      read_answer_with_default $PROCESSING_ROOT/$RUN
      NEW_ROOT=$answer
      if [ -d $NEW_ROOT ]; then
         echo "warning - $NEW_ROOT already exists, use anyway ? (y/n, default=y)"
         read_answer_with_default y
         if [ $answer == "y" ]; then
            OUTPUT_ROOT=$NEW_ROOT
            break
         fi
      else
         mkdir -p $NEW_ROOT
         if [ -d $NEW_ROOT ]; then
            OUTPUT_ROOT=$NEW_ROOT
            break
         fi
      fi
   done

   echo "will use output root folder $OUTPUT_ROOT

   "

   ####### get and check the analysis type 
   # figure out the appropriate default
   echo "checking if we can see project folders. . . "
   ls $OUTPUT_ROOT/${RUN}.*.project_folders > /dev/null 2>&1
   if [ $? == 0 ]; then
      default=all
   else
      default=project_folders
   fi
   while [ 1 ] ; do
      echo "
please give which analysis you want (all, project_folders, bcl2fastq, fastqc, bcl2fastq_custom, clean, fasta_sample, kmer_analysis, fastq_stats, blast_analysis, annotation, html, clientreport, fastq_sample, common_sequence) (or just press enter to run $default)  
"
      read_answer_with_default $default 
      ANALYSIS=$answer
      if [[ ( $ANALYSIS != "all" ) && ( $ANALYSIS != "project_folders" ) && ( $ANALYSIS != "bcl2fastq" ) && ( $ANALYSIS != "fastqc" ) && ( $ANALYSIS != "bcl2fastq_custom" ) && ( $ANALYSIS != "clean" ) && ( $ANALYSIS != "fasta_sample" ) && ( $ANALYSIS != "kmer_analysis" ) && ( $ANALYSIS != "fastq_stats" ) && ( $ANALYSIS != "blast_analysis" ) && ( $ANALYSIS != "annotation" )  && ( $ANALYSIS != "html" ) && ( $ANALYSIS != "clientreport" )  && ( $ANALYSIS != "fastq_sample" ) && ( $ANALYSIS != "common_sequence" ) ]]; then
         echo "analysis must be one of all, project_folders, bcl2fastq, fastqc, bcl2fastq_custom, clean, fasta_sample, kmer_analysis, fastq_stats, blast_analysis, annotation, html, clientreport, fastq_sample, common_sequence"
      else
         break
      fi
   done

   echo "will use analysis=$ANALYSIS
   "

   if [[ ( $ANALYSIS != "html" ) && ( $ANALYSIS != "bcl2fastq" ) && ( $ANALYSIS != "project_folders" ) ]]; then 
      ####### get and check whether to run locally or on the cluster
      echo "

should this run be queued on the compute cluster ? (y/n, default=y. If n, will be run locally)
"
      read_answer_with_default y
      if [ "$answer" != "n" ]; then 
         HPC_TYPE=slurm
      else
         HPC_TYPE=local
      fi
   else
      HPC_TYPE=local
   fi


   ####### get and check the sample sheet
   SAMPLE_SHEET=""
   if [ -f $wgs_ROOT/$RUN/SampleSheet.csv ]; then
      echo "will use sample sheet $wgs_ROOT/$RUN/SampleSheet.csv , containing...(press enter for listing)..."
      read_answer_with_default ""
      more_with_default $wgs_ROOT/$RUN/SampleSheet.csv 
      echo "

      "
      echo "is this OK ? (y/n, default=y)"
      read_answer_with_default y
      if [ "$answer" == "y" ]; then
         SAMPLE_SHEET=$wgs_ROOT/$RUN/SampleSheet.csv 
      fi
   else
      echo "warning - could not find a sample sheet in the usual place ( $wgs_ROOT/$RUN/SampleSheet.csv )"
   fi
   while [ -z "$SAMPLE_SHEET" ]; do
      echo "please enter enter or paste in the full path to the sample sheet specifying lane contents and downstream processing"
      read SAMPLE_SHEET
      if [ ! -f "$SAMPLE_SHEET" ]; then 
         SAMPLE_SHEET=""
      fi
   done
}

function run_step() {
   step=$1

   base_cmd="$WGS_PRISM_BIN/ag_wgs_qc_prism.sh -a $step -O $OUTPUT_ROOT -r $RUN -s $SAMPLE_SHEET "

   if [[ ( $step == "bcl2fastq" ) || ( $step == "project_folders" ) || ( $step == "html" ) ]]; then
      cmd="$base_cmd -C local "
   else
      cmd="$base_cmd \`cat $OUTPUT_ROOT/*/project_list.txt\`"
   fi

   echo "

Ready to run q/c step $step , with the following: 

$cmd

OK to continue ? (y/n - default = y)
"
   read_answer_with_default y
   if [ $answer != "y" ]; then
      echo "OK quitting"
      exit 1
   else 
      echo "
      running wgs_prism version $wgs_version using : 

      $cmd

      " >> $OUTPUT_ROOT/run_wgs_qc.log 
      echo "
      export SEQ_PRISMS_BIN=$SEQ_PRISMS_BIN
      export WGS_PRISM_BIN=$WGS_PRISM_BIN 
      $cmd  
      "  > $OUTPUT_ROOT/restart_qc.src 

      echo "
      (if you need to kill this run, you can restart using : 

      source $OUTPUT_ROOT/restart_qc.src

      - once that completes you may need to rerun this interactive script to complete any remaining steps)
      "
    
      $cmd  >> $OUTPUT_ROOT/run_wgs_qc.log 2>&1
      return_code=$?

      if [ $return_code != 0 ]; then
         echo "

>>>> ( looks like there was a problem with ag_wgs_qc_prism.sh (non-zero return code $return_code ) - check $OUTPUT_ROOT/run_wgs_qc.log and other .log files ) 
"
      else
          echo "** run_wgs_qc looks ok **"
      fi
   fi
}

get_opts "$@"
get_run_opts

run_step $ANALYSIS

if [[ ( $ANALYSIS == "bcl2fastq" ) || ( $ANALYSIS == "project_folders" ) ]] ; then
   if [ $return_code == 0 ]; then
      run_step all 
   fi
   if [ $return_code == 0 ]; then
      run_step html
   fi
else
   run_step html
fi
